#!/bin/bash

# check that ffmpeg is ok (for darwin; don't know what the path is for linux)
if [[ `uname` == 'Darwin' ]]; then
    if [[ ! -e /usr/local/lib/frei0r-1/pixeliz0r.dylib ]]; then
        echo "Need the frei0r plugin for ffmpeg,"
        echo "and the dylib needs to MANUALLY created!"
        echo "Run:"
        echo "  brew install ffmpeg --with-frei0r"
        echo "  cd /usr/local/lib/frei0r-1/"
        # for some reason, ffmpeg looks for .dylibs
        # so you have to manually create this symlink
        echo "  ln -s pixeliz0r.so pixeliz0r.dylib"
        exit 2
    fi
fi

[[ -z $1 ]] && echo 'Requires input file.' && exit 1
WP=$1

# safety check
[[ ! -e $WP ]] && echo "$WP: doesn't exist." && exit 1

PIX=/tmp/_pixelate.jpg
CRP=/tmp/_crop.jpg

trunc () { sed -e 's/\..*//' < /dev/stdin; }

# get resolution of screen (os-specific)
if [[ `uname` == 'Darwin' ]]; then
    #SCREEN=($(system_profiler SPDisplaysDataType |grep Resolution|grep -Eo '\d+'))
    # hardcoded - mac may be weird w/ rdm?
    SCREEN=(1680 1050)
else
    # untested
    SCREEN=($(xrandr | grep '*' | grep -Eo '\d+ x \d+'))
    echo 'make sure this screen res is correct for linux:'
    echo ${SCREEN[@]}
    echo '(linux) exiting...'
    exit 2
fi

# get resolution of picture
RES=($(ffmpeg -i $WP 2>&1|grep 'Stream'|grep -Eo '\d+x\d+'|tr 'x' ' '))

# get size of window (TODO : app-specific?)
DIMS=($(osascript -e 'tell app "iTerm2" to get bounds of front window'|tr -d ','))

X=$(echo "(${DIMS[0]} / ${SCREEN[0]}) * ${RES[0]}" | bc -l | trunc)
Y=$(echo "(${DIMS[1]} / ${SCREEN[1]}) * ${RES[1]}" | bc -l | trunc)

W=$(echo "(${DIMS[2]} / ${SCREEN[0]}) * ${RES[0]}" | bc -l | trunc); W=$((W-X))
H=$(echo "(${DIMS[3]} / ${SCREEN[1]}) * ${RES[1]}" | bc -l | trunc); H=$((H-Y))

# pixelate, THEN crop image (can't crop first since pixelation size gets weird)
ffmpeg -y -i $WP -filter:v 'frei0r=pixeliz0r:0.02|0.02' $PIX >& /dev/null
ffmpeg -y -i $PIX -vf "crop=$W:$H:$X:$Y" $CRP >& /dev/null

# set it as bg img of the terminal
osascript -e "tell app \"iTerm2\" to tell current session of current window to set background image to \"$CRP\""
