# hopefully we can still do lalt
# can we still do passthroughs?

khd mode tree prefix on
khd mode tree timeout 0.5
khd mode tree restore default

khd mode space prefix on
khd mode space timeout 0.5
khd mode space restore default

# Mode `tmux` not complete (keep this commented)
#khd mode tmux prefix on
#khd mode tmux timeout 1
#khd mode tmux restore default

# old colors:
# black: 0xaa282828 (focused color)
# green: 0xcc98971a 
# white: 0x77fbf1c7
#khd mode default	on_enter chunkc set_focused_border_color 0xaa282828; chunkc border::color 0xaa282828
khd mode default	on_enter chunkc set_focused_border_color 0xffebdbb2; chunkc border::color 0xffebdbb2
khd mode tree		on_enter chunkc set_focused_border_color 0xcc458588; chunkc border::color 0xcc458588 
khd mode space		on_enter chunkc set_focused_border_color 0xccb16286; chunkc border::color 0xccb16286 
#khd mode tmux		on_enter chunkc set_focused_border_color 0xcc7b4b93; chunkc border::color 0xcc7b4b93 

# toggle between modes
ctrl - d			:	khd -e "mode activate space"
ctrl - f			:	khd -e "mode activate tree"
#ctrl - a			:	khd -e "mode activate tmux"


# remap ctrl+a / ctrl+e -> start/end of line
lctrl - a	![
				HyperTerm,
				Terminal,
				iTerm,
				iTerm2,
				Microsoft Remote Desktop,
				kitty,
				XQuartz,
				urxvt
			] : khd -p "ctrl - left"
lctrl - e	![
				HyperTerm,
				Terminal,
				iTerm,
				iTerm2,
				Microsoft Remote Desktop,
				kitty,
				XQuartz,
				urxvt
			] : khd -p "ctrl - right"

# remap ctrl+u -> delete from cursor to start of line
lctrl - u	![
				HyperTerm,
				Terminal,
				iTerm,
				iTerm2,
				Microsoft Remote Desktop,
				kitty,
				XQuartz,
				urxvt
			] : khd -p "ctrl + shift - left"; khd -p " - delete"

ctrl - 9 : khd -w "hello?"

####
## Defaults
####

# save current layout (?)
ctrl + alt - w			: chunkc tiling::desktop --deserialize ~/.chunkwm_layouts/dev_1

cmd - return			: ~/.bin/wp -n
cmd + shift - return	: open -na Google\ Chrome
cmd + alt + ctrl - l	: open -a /System/Library/Frameworks/ScreenSaver.framework/Versions/Current/Resources/ScreenSaverEngine.app

# float next window to be tiled
alt - c : chunkc set window_float_next 1

# chunkwm really doesn't like iterm2 dropdown: make it floating then drop it down
alt + shift - space		: chunkc set window_float_next 1; khd -p "alt - space"

# focus windows
alt - n : chunkc tiling::window --focus next
alt - m : chunkc tiling::window --focus prev

lcmd - h : chunkc tiling::window --focus west
lcmd - j : chunkc tiling::window --focus south
lcmd - k : chunkc tiling::window --focus north
lcmd - l : chunkc tiling::window --focus east

# equalize size of windows
shift + alt - 0 : chunkc tiling::desktop --equalize

# increase region size (floating or nonfloating)
lalt - h : ~/.config/scripts/chunk_resize_mgr.sh --increase west
lalt - j : ~/.config/scripts/chunk_resize_mgr.sh --increase south
lalt - k : ~/.config/scripts/chunk_resize_mgr.sh --increase north
lalt - l : ~/.config/scripts/chunk_resize_mgr.sh --increase east

# decrease region size (floating or nonfloating)
shift + lalt - h : ~/.config/scripts/chunk_resize_mgr.sh --decrease west
shift + lalt - j : ~/.config/scripts/chunk_resize_mgr.sh --decrease south
shift + lalt - k : ~/.config/scripts/chunk_resize_mgr.sh --decrease north
shift + lalt - l : ~/.config/scripts/chunk_resize_mgr.sh --decrease east

# swap window
ctrl + lalt - h : chunkc tiling::window --swap west
ctrl + lalt - j : chunkc tiling::window --swap south
ctrl + lalt - k : chunkc tiling::window --swap north
ctrl + lalt - l : chunkc tiling::window --swap east

# reinsert window
cmd + shift - h : chunkc tiling::window --warp west
cmd + shift - j : chunkc tiling::window --warp south
cmd + shift - k : chunkc tiling::window --warp north
cmd + shift - l : chunkc tiling::window --warp east

# set insertion point for focused container
lcmd + ctrl - f : chunkc tiling::window --use-insertion-point cancel
lcmd + ctrl - h : chunkc tiling::window --use-insertion-point west
lcmd + ctrl - j : chunkc tiling::window --use-insertion-point south
lcmd + ctrl - k : chunkc tiling::window --use-insertion-point north
lcmd + ctrl - l : chunkc tiling::window --use-insertion-point east

# deal with floating windows! (this is a bash workaround)
cmd + shift - left	: ~/.config/scripts/chunk_float.sh move -x
cmd + shift - right	: ~/.config/scripts/chunk_float.sh move +x
cmd + shift - up	: ~/.config/scripts/chunk_float.sh move -y
cmd + shift - down	: ~/.config/scripts/chunk_float.sh move +y

# switch to last active desktop (wip?)
# actually, might be able to do
# khd -p "cmd - $id"
# instead - just harness macOS keybindings
#cmd + alt - x   : `id=$(chunkc get _last_active_desktop); khd -p "cmd + alt - $id" &> /dev/null`
cmd + alt - x   : `id=$(chunkc get _last_active_desktop); khd -p "cmd - $id" &> /dev/null`

# focus monitor
#ctrl - z  : chunkc tiling::monitor -f prev
ctrl - 1 : chunkc tiling::monitor -f 1
ctrl - 2 : chunkc tiling::monitor -f 2
ctrl - 3 : chunkc tiling::monitor -f 3

# send window to monitor and follow focus
#ctrl + cmd - z  : chunkc tiling::window --send-to-monitor prev; chunkc tiling::monitor -f prev
#ctrl + cmd - c  : chunkc tiling::window --send-to-monitor next; chunkc tiling::monitor -f next
ctrl + shift - 1 : chunkc tiling::window --send-to-monitor 1; chunkc tiling::monitor -f 1
ctrl + shift - 2 : chunkc tiling::window --send-to-monitor 2; chunkc tiling::monitor -f 2
ctrl + shift - 3 : chunkc tiling::window --send-to-monitor 3; chunkc tiling::monitor -f 3


####
## Tree
####


# toggle on/off padding
alt - a : chunkc tiling::desktop --toggle offset

# toggle window split type (like a container rotation)
alt - e : chunkc tiling::window --toggle split


# reload config
tree + ctrl - r : khd -e "reload"

# rotate tree
tree - r : chunkc tiling::desktop --rotate 90

# toggle window fullscreen
tree - f : chunkc tiling::window --toggle fullscreen

# toggle window native fullscreen
tree + shift - f : chunkc tiling::window --toggle native-fullscreen

# toggle window parent zoom
tree - p : chunkc tiling::window --toggle parent

# Helpful presets for floating windows (see bash script for locations):
# toggles floating, sends to center of screen
tree - g		:	~/.config/scripts/chunk_float.sh preset 0
# keep window where it is
tree + shift -g	:	chunkc tiling::window --toggle float
tree - q		:	~/.config/scripts/chunk_float.sh preset 1
tree - w		:	~/.config/scripts/chunk_float.sh preset 2
tree - e		:	~/.config/scripts/chunk_float.sh preset 3
tree + alt - g	:	~/.config/scripts/chunk_float.sh preset 4

# toggle sticky and float, then resize to picture-in-picture size
# note - this doesn't unfloat when you un-sticky it (this is my preferred behavior)
tree - s		:	chunkc tiling::window --toggle sticky;\
					~/.config/scripts/chunk_float.sh preset 1

# add this to tree mode
# send window to desktop and switch desktop
tree - x : `id=$(chunkc get _last_active_desktop); chunkc tiling::window -d $id; khd -p "cmd - $id"`

tree - z : chunkc tiling::window -d prev; khd -p "cmd - left"
tree - c : chunkc tiling::window -d next; khd -p "cmd - right"

tree - 1 : chunkc tiling::window -d 1
tree + shift - 1 : chunkc tiling::window -d 1; khd -p "cmd - 1"
tree - 2 : chunkc tiling::window -d 2
tree + shift - 2 : chunkc tiling::window -d 2; khd -p "cmd - 2"
tree - 3 : chunkc tiling::window -d 3
tree + shift - 3 : chunkc tiling::window -d 3; khd -p "cmd - 3"
tree - 4 : chunkc tiling::window -d 4
tree + shift - 4 : chunkc tiling::window -d 4; khd -p "cmd - 4"
tree - 5 : chunkc tiling::window -d 5
tree + shift - 5 : chunkc tiling::window -d 5; khd -p "cmd - 5"
tree - 6 : chunkc tiling::window -d 6
tree + shift - 6 : chunkc tiling::window -d 6; khd -p "cmd - 6"


####
## Space
####

# as of chunkwm, is this necessary?
# I use ctrl-d to exit shell and to close tmux panes
space + ctrl - d		[HyperTerm,Terminal,iTerm,iTerm2]	->	:	khd -e "mode activate default"

# change layout of desktop
space - b : chunkc tiling::desktop --layout bsp
space - m : chunkc tiling::desktop --layout monocle
space - f : chunkc tiling::desktop --layout float

# do we still have dynamic screen padding?
