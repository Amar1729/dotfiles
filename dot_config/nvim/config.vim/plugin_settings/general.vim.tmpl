"""
" General plugin settings and keybinds
"""


unmenu PopUp.Paste
unmenu PopUp.Select\ All
unmenu PopUp.-1-
unmenu PopUp.How-to\ disable\ mouse
anoremenu PopUp.Diagnostic :lua vim.diagnostic.open_float()<CR>
anoremenu PopUp.Rename :lua vim.lsp.buf.rename()<CR>
anoremenu PopUp.TypeDefinition :lua vim.lsp.buf.type_definition()<CR>


" popup lsp_signature automatically
lua require('lsp_signature').setup({ bind = true })


" use color 2 for the new window border
lua require('colorful-winsep').setup()


" python info - is this still required?
" gtfo py2
let g:python_host_prog=''
{{ if (eq .chezmoi.os "darwin") -}}
{{ if (eq .chezmoi.arch "arm64") -}}
let g:python3_host_prog='/opt/homebrew/bin/python3'
{{ else -}}
let g:python3_host_prog='/usr/local/bin/python3'
{{- end }}
{{ else if (eq .chezmoi.os "linux") -}}
let g:python3_host_prog='/usr/bin/python3'
{{- end }}


" vimwiki settings
let wiki_1 = {}
let wiki_1.path = '~/Dropbox/wiki/'
"let wiki_1.html_template = '~/public_html/template.tpl'
"let wiki_1.nested_syntaxes = {'python': 'python', 'c++': 'cpp'}

let wiki_2 = {}
let wiki_2.path = '~/Documents/Personal/work_wiki/'
"let wiki_2.index = 'main'

let g:vimwiki_list = [wiki_1, wiki_2]


" leap.nvim
lua require('leap').add_default_mappings()


" setup flit
lua require('flit').setup({
\    labeled_modes = "n",
\        special_keys = {
\            repeat_search = { "<Enter>" },
\        },
\    opts = {
\        special_keys = {
\            repeat_search = { "<Enter>" },
\        }
\    },
\ })

lua require('leap-spooky').setup({
\    paste_on_remote_yank = true,
\    })


" hlslens - immediately search selected text with * or #
" (note this is more powerful than builtin "search word")
lua <<EOF
local hlslens = require('hlslens')

hlslens.setup {
  calm_down = false,
  nearest_only = true,
  virt_priority = 10,
}
EOF


" LSP Diagnostics - better signs
sign define DiagnosticSignError text=x
sign define DiagnosticSignWarn text=!
sign define DiagnosticSignInfo text=>
sign define DiagnosticSignHint text=?

lua require('Comment').setup()
