#!/bin/bash

set -eufo pipefail

function chezmoi () {
    if [[ -x "$HOME/bin/chezmoi" ]]; then
        "$HOME/bin/chezmoi" "$@"
    else
        command chezmoi "$@"
    fi
}

PKG_DIR="$(chezmoi source-path)"/dot_config/packages

{{ if (eq .chezmoi.os "darwin") -}}

xcode-select --install || true

if ! command -v brew; then
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

# generate with `brew bundle dump`
brew bundle --no-lock --file="${PKG_DIR}/Brewfile"

{{ if .work -}}
    brew bundle --no-lock --file="${PKG_DIR}/Brewfile-work"
{{- end }}

/usr/local/bin/pip3 install --user pynvim jedi

{{ else if (eq .chezmoi.os "linux") -}}
{{   if (eq .chezmoi.osRelease.id "arch") -}}

sudo pacman -Syu
sudo pacman -S --needed - < "${PKG_DIR}/arch-pacman.txt"

if ! command -v yay; then
    [[ -d /tmp/yay ]] && rm -rf /tmp/yay
    git clone https://aur.archlinux.org/yay-git.git /tmp/yay
    cd /tmp/yay
    makepkg -si
fi

yay -S --needed - < "${PKG_DIR}/arch-aur.txt"

{{-   end }}

{{- end }}

# install pipx pkgs
# generate with `pipx list|grep package|awk '{print $2}'`
PIPX_CURRENT="$(pipx list | grep package | awk '{print $2}')"
while read -r pkg || [[ -n "$pkg" ]]; do
    if ! grep "^${pkg}$" <<< "$PIPX_CURRENT" &>/dev/null; then
        pipx install --force "$pkg"
    fi
done < "${PKG_DIR}/pipx.txt"

# cargo install racer sccache
